memory_initialization_radix = 2;
memory_initialization_vector =
00100000000000010000000000000001,//addi		($1)=($0)+1		($1)=1
00100000000000101111111111111111,//addi		($2)=($0)-1		($2)=-1
00100100000000111000000000000001,//addiu	($3)=($0)+32769	($3)=32769
00110000010001000000000000000000,//andi		($4)=($2)&&全0	($4)=全0
00110100100010010000000000000000,//ori		($5)=($2)||全0  ($5)=全1
00111000001001100000000000000010,//xori		($6)=($1)异或2  ($6)=3
10101100000000010000000000000000,//sw		($1)给第0~3字节
10100100000001010000000000000100,//sh		($5)给第4~5字节
10100000000000010000000000000110,//sb		($5)给第6字节		
10000000000001110000000000000110,//lb		第6字节有符号扩展给($7)		($7)=全1
10000100000010000000000000000100,//lh		第4~5字节有符号扩展给($8)	($8)=全1
10001100000010010000000000000000,//lw		第0~3字节有符号扩展给($9)	($9)={31'b0,1'b1}
10010000000010100000000000000110,//lbu		第6字节无符号扩展给($10)	($10)={24'b0,8'b1}
10010100000010110000000000000100,//lhu		第4~5字节无符号扩展给($8)	($11)={16'b0,16'b1}
00010000000000010000000000000000,//beq		($0)与($1)相等则跳转【本条不跳转】
00010100000000000000000000000000,//bne		($0)与($0)不相等则跳转【本条不跳转】
00000100010000010000000000000000,//bgez		($2)≥0则跳转【本条不跳转】
00011100010000000000000000000000,//bgtz		($2)＞0则跳转【本条不跳转】
00011000001000000000000000000000,//blez		($1)≤0则跳转【本条不跳转】
00000100001000000000000000000000,//bltz		($1)＜0则跳转【本条不跳转】
00000100010100010000000000000000,//bgezal	($2)≥0则跳转且写($31)【本条不跳转不写】
00000100001100000000000000000000,//bltzal	($1)＜0则跳转且写($31)【本条不跳转不写】
00101000010011001111111111111111,//slti	    ($2)＜-1则写($12)为1【本条不写】
00101100001011000000000000000001,//sltiu    ($1)＜1则写($12)为1【本条不写】
00111100000011010000000000000001,//lui		1左移16位写给($13)	($13)={15'b0,1'b1,16'b0}
